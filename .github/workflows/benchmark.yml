name: Build and Run Benchmark

on:
  push:
  pull_request:
    branches: [master]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - uses: lukka/get-cmake@latest

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S .

      - name: Build
        run: cmake --build build --target benchmarking --config ${{ matrix.build_type }}

      - name: Run tests
        shell: bash
        run: |
          mkdir test-reports
          if [ "${{ runner.os }}" == "Windows" ]; then
            .\\build\\tests\\benchmarking\\Release\\benchmarking.exe --reporter junit --out test-reports/test-results-${{ matrix.os }}.xml
          else
            ./build/tests/benchmarking/benchmarking --reporter junit --out test-reports/test-results-${{ matrix.os }}.xml
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.os }}
          path: test-reports/test-results-${{ matrix.os }}.xml
